class Solution {
public:
    int solve(int i,int j,string &s1,string &s2,vector<vector<int>> &dp){
        if(i>=s1.size()||j>=s2.size()) return 0;
        if(dp[i][j]!=-1) return dp[i][j];
        int a=0,b=0,c=0;
        if(s1[i]==s2[j]){
            a=1+solve(i+1,j+1,s1,s2,dp);
        }
        else{
         b=solve(i+1,j,s1,s2,dp);
         c=solve(i,j+1,s1,s2,dp);
        }

        return dp[i][j]=max({a,b,c});
    }
    int longestCommonSubsequence(string text1, string text2) {
        int n=max(text1.size(),text2.size());
        vector<vector<int>> dp(n,vector<int>(n,-1));
        return solve(0,0,text1,text2,dp);
    }
};
