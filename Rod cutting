class Solution {
public:
    int solve(int i,int j,vector<int> &cuts,map<vector<int>,int> &dp){
        if(j-i==1)return 0;
        vector<int> l({i,j});
        if(dp.find(l)!=dp.end())return dp[l];
        int ans=INT_MAX;
        for(int k=0;k<cuts.size();k++){
            if(cuts[k]>i&&cuts[k]<j){
                int a=j-i+solve(i,cuts[k],cuts,dp)+solve(cuts[k],j,cuts,dp);
                ans=min(a,ans);
            }
        }
        return dp[l]=ans==INT_MAX?0:ans;
    }
    int minCost(int n, vector<int>& cuts) {
        map<vector<int>,int> mp;
        return solve(0,n,cuts,mp);
    }
};
