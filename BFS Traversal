#include <bits/stdc++.h> 
vector<int> BFS(int v, vector<pair<int, int>> edges)
{
    vector<int> adj[v];
    for(auto it:edges){
     adj[it.first].push_back(it.second);
     adj[it.second].push_back(it.first);
    }
        for(int i = 0; i < v; i++){

        sort(adj[i].begin(), adj[i].end());

    }
    vector<int> vis(v,0);
    vector<int> ans;

    for(int i=0;i<v;i++){
        queue<int> q;
      if (vis[i] == 0) {
        vis[i]=1;
        q.push(i);
    while(!q.empty()){
        int node=q.front();q.pop();
        ans.push_back(node);
        for (auto it : adj[node]) {
          if (!vis[it]) {
            vis[it] = 1;
            q.push(it);
          }
        }
    }
      }
    }
    return ans;
}
