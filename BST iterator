#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

class BSTiterator
{
    vector<int> v;
    int i=0;
    public:
    BSTiterator(TreeNode<int> *root)
    {
        recur(root);
    }
    void recur(TreeNode<int> *root){
        if(root==NULL)
        return;

        recur(root->left);
        v.push_back(root->data);
        recur(root->right);
    }
    int next()
    {
        if(i!=v.size())
        return v[i++];
    }

    bool hasNext()
    {
        if(i!=v.size())
        return true;

        return false;
    }
};


/*
    Your BSTIterator object will be instantiated and called as such:
    BSTIterator iterator(root);
    while(iterator.hasNext())
    {
       print(iterator.next());
    }
*/
