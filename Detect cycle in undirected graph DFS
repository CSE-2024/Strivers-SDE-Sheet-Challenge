bool detect(int par,int parent,vector<int> adj[],vector<int> &vis){
    vis[par]=1;
    for(auto it:adj[par]){
      if (!vis[it]) {
        if (detect(it, par, adj, vis) == true)
          return true;
      } else if (it != parent)
        return true;
    }
    return false;
}
string cycleDetection(vector<vector<int>>& edges, int n, int m)
{
    vector<int> vis(n+1,0);
    
    vector<int> adj[n+1];
    for(int i=0;i<m;i++){
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);
    }
    for(int i=1;i<=n;i++){
        if(!vis[i])
        {
            if(detect(i,-1,adj,vis)==true)
            return "Yes";
        }
    }
    return "No";
}
