#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int> v;
    if(root==NULL)
    return v;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);
    int cnt=0;
    while(!q.empty()){
        int size=q.size();
        int s=v.size();
        for(int i=0;i<size;i++){
           BinaryTreeNode<int> *a=q.front();
           q.pop();
           v.push_back(a->data);
           if(a->left!=NULL)q.push(a->left);
           if(a->right!=NULL)q.push(a->right);
        }
        if(cnt%2!=0)
        reverse(v.begin()+s,v.end());
        cnt++;
    }

    return v;
}
