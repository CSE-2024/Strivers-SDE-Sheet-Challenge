#include <bits/stdc++.h> 
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    vector<pair<int,int>> adj[n+1];
    for(auto it:g){
        int a=it.first.first;
        int b=it.first.second;
        int wt=it.second;
        adj[a].push_back({b,wt});
        adj[b].push_back({a,wt});
    }
    vector<pair<pair<int,int>,int>> ans;
    priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>> pq;
    pq.push({0,{1,-1}});
    vector<int> vis(n+1,0);

    while(!pq.empty()){
        auto it=pq.top();pq.pop();
        int wt=it.first;
        int node=it.second.first;
        int parnode=it.second.second;

        if(vis[node]!=0) continue;
        if(parnode!=-1) ans.push_back({{parnode,node},wt});

        vis[node]=1;

        for(auto it:adj[node]){
           int curr=it.first;
           int wt=it.second;
           if(!vis[curr]){
               pq.push({wt,{curr,node}});
           }
        }
    }
    return ans;
}
