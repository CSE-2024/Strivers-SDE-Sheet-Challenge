void dfs(int node,vector<int> adj[],vector<int> &vis,vector<int> &v){
    vis[node]=1;
    for(auto it:adj[node]){
        if(!vis[it]){
            v.push_back(it);
            dfs(it,adj,vis,v);
        }
    }
}
vector<vector<int>> depthFirstSearch(int v, int e, vector<vector<int>> &edges)
{
    vector<int> adj[v];
    for(auto it:edges){
        adj[it[0]].push_back(it[1]);
        adj[it[1]].push_back(it[0]);
    }
    vector<int> vis(v,0);
    vector<vector<int>> ans;
    for(int i=0;i<v;i++){
        vector<int> vt;
        if(vis[i]==0){
            vt.push_back(i);
            dfs(i,adj,vis,vt);
        }
        if(vt.size()!=0)
        ans.push_back(vt);
    }
    return ans;
}
