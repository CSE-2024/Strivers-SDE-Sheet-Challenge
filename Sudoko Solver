class Solution {
public:
    bool isvalid(int x,int y,char val,vector<vector<char>> &board){
        for(int i=0;i<9;i++){
            if(board[i][y]==val)return false;
        }
        for(int j=0;j<9;j++){
            if(board[x][j]==val)return false;
        }
        int rowStart = (x / 3) * 3;
        int colStart = (y / 3) * 3;
        for (int i = rowStart; i < rowStart + 3; i++) {
            for (int j = colStart; j < colStart + 3; j++) {
                if (board[i][j] == val)
                    return false;
            }
        }
        return true;
    }
    bool solve(int x,int y,vector<vector<char>> &board){
        if(x==9) return true;
        if(y==9) return solve(x+1,0,board);
        if(board[x][y]=='.'){
        for(char i='1';i<='9';i++){
           if(isvalid(x,y,i,board)==true){
               board[x][y]=i;
               if(solve(x,y+1,board))return true;
               board[x][y]='.';
           }
        }
        }
        else{
            if(solve(x,y+1,board))return true;
        }

        return false;
    }
    void solveSudoku(vector<vector<char>>& board) {
        solve(0,0,board);
    }
};
