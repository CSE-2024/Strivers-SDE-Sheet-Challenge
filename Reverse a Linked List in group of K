/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        int prev=0,n=0;
        if(head->next==NULL)
        return head;
        vector<int> v;
        struct ListNode *temp=head;
        while(temp!=NULL){
            v.push_back(temp->val);
            temp=temp->next;
            n++;
        }
        temp=head;
        while(temp!=NULL)
        {
            int count=k;
            if(k>n)
            break;
            for(int i=prev+k-1;count>0&&temp!=NULL;count--,i--){
                temp->val=v[i];
                temp=temp->next;
                n--;
            }
            prev=prev+k;
        }
        return head;
    }
};
