/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* createTree(vector<int> &data,int s,int l){
        if(l-s<0)
        return NULL;
        
        TreeNode *root=new TreeNode(data[(s+l)/2]);
        root->left=createTree(data,s,(s+l)/2 -1);
        root->right=createTree(data,(s+l)/2+1,l);
        
        return root;
     }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        TreeNode *r=createTree(nums,0,nums.size()-1);
        return r;
    }
};
