#include<queue>
bool isGraphBirpatite(vector<vector<int>> &edges) {
	int n=edges.size();
	vector<int> adj[n];
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			if(edges[i][j]==1){
				adj[i].push_back(j);
				adj[j].push_back(i);
			}
		}
	}
	vector<int> color(n,-1);
	queue<int> q;
	for(int i=0;i<n;i++){
          if (color[i] == -1) {
            color[i] = 0;
            q.push(i);
			while(!q.empty()){
		int node=q.front();q.pop();
		int col=color[node];

		for(auto it:adj[node]){
                  if (color[it] == -1) {
                    color[it]=!col;
					q.push(it);
                  } else {
                    if (color[it] == col)
                      return false;
                  }
                }
        }
          }
        }
	
return true;
}
