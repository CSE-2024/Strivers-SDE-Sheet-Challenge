#include<bits/stdc++.h>
int detectCycleInDirectedGraph(int n, vector < pair < int, int >> & edges) {
    vector<int> vis(n+1,0),ind(n+1,0);
    stack<int> st;
    vector<int> adj[n+1];
    for(int i=0;i<edges.size();i++){
        adj[edges[i].first].push_back(edges[i].second);
        ind[edges[i].second]++;
    }
    queue<int> q;
    for(int i=1;i<=n;i++){
      if(ind[i]==0)q.push(i);
    }
    vector<int> v;
    while(!q.empty()){
      int node=q.front();
      q.pop();
      v.push_back(node);
      for(auto it:adj[node]){
        ind[it]--;
        if(ind[it]==0)
        q.push(it);
      }
    }
    if(v.size()!=n)
    return 1;
    else return 0;
}
