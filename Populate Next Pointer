#include <bits/stdc++.h> 
/*
    ----------------- Binary Tree node class for reference -----------------

    template <typename T>
    class BinaryTreeNode {
        public : 
            T data;
            BinaryTreeNode<T> *left;
            BinaryTreeNode<T> *right;
            BinaryTreeNode<T> *next;

            BinaryTreeNode(T data) {
                this -> data = data;
                left = NULL;
                right = NULL;
                next = NULL;
            }
    };
*/

void connectNodes(BinaryTreeNode< int > *root) {
    queue<BinaryTreeNode<int>*> q;
        q.push(root);
        if(root==NULL)
        return ;
        while(!q.empty()){
            int size=q.size();
            vector<BinaryTreeNode<int>*> vtr;
            for(int i=0;i<size;i++){
                BinaryTreeNode<int>*temp=q.front();q.pop();
                vtr.push_back(temp);
                if(temp->left!=NULL)q.push(temp->left);
                if(temp->right!=NULL)q.push(temp->right);
            }
            for (int i = 0; i < vtr.size() - 1; i++) {
              vtr[i]->next = vtr[i + 1];
            }
            vtr[vtr.size() - 1] = NULL;
        }
}
