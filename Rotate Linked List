/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        vector<int> v;
        if(head==NULL||k<1)
        return head;
        ListNode* temp=head;
        int count=0;
        while(temp!=NULL){
            v.push_back(temp->val);
            temp=temp->next;
            count++;
        }
        int t;
        t=k%v.size();
        temp=head;
        for(int i=v.size()-t;count>0;i++){
            if(i==v.size()){
                i=0;
            }
            temp->val=v[i];
            count--;
            temp=temp->next;
        }
        return head;
    }
};
